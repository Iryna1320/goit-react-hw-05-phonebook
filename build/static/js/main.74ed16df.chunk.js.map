{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","inputChange","evt","currentTarget","value","setState","onAddContact","event","preventDefault","props","onSubmit","reset","this","className","styles","formContact","htmlFor","formLabel","pattern","title","required","type","placeholder","formInput","onChange","button","Component","connect","dispatch","contactsActions","contacts","filter","e","target","filterTitle","filterInput","getVisibleContactName","allContacts","normalizedFilter","toLowerCase","contact","includes","items","onDeleteContact","map","contactItem","buttonDel","onClick","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.74ed16df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__ye_Rd\",\"filterInput\":\"Filter_filterInput__1tauE\",\"filterTitle\":\"Filter_filterTitle__zul83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__2keJR\",\"buttonDel\":\"ContactList_buttonDel__11_T1\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction(\r\n  'contact/Add',\r\n  function prepare({ name, number }) {\r\n    return {\r\n      payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nconst deleteContact = createAction('contact/Delete');\r\n\r\nconst changeFilter = createAction('contact/chageFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n// import PropTypes, { number } from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  inputChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onAddContact = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { onAddContact, inputChange, nameInputId, numberInputId } = this;\r\n    return (\r\n      <form className={styles.formContact} onSubmit={onAddContact}>\r\n        <label htmlFor={nameInputId} className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"введите имя\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={styles.formInput}\r\n            onChange={inputChange}\r\n            id={nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={numberInputId} className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            type=\"telephone\"\r\n            placeholder=\"введите номер\"\r\n            name=\"number\"\r\n            className={styles.formInput}\r\n            value={number}\r\n            onChange={inputChange}\r\n            id={numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   //   message: PropTypes.string.isRequired,\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <lable className={styles.filter}>\r\n      <p className={styles.filterTitle}>Find contacts by name</p>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </lable>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.buttonDel}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Deleted\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContactName = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContactName(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App_title\">Phonebook</h1>\n        <ContactForm />\n        <h2 className=\"App_title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__1fs5z\",\"formLabel\":\"ContactForm_formLabel__P2L80\",\"formInput\":\"ContactForm_formInput__1N7WL\",\"button\":\"ContactForm_button__2u_JN\"};"],"sourceRoot":""}